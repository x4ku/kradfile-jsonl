#!/usr/bin/env python3
import json
import logging
import os
from pathlib import Path


logging.basicConfig(
    level=os.getenv('LOG_LEVEL', 'INFO'),
    format=(
        '[%(levelname)s] %(asctime)s '
        '(%(funcName)s:%(lineno)s) '
        '%(message)s'
    )
)
logger = logging.getLogger(__name__)


def main():
    data_dir = Path('data')
    input_paths = [data_dir / 'kradfile', data_dir / 'kradfile2']
    output_path = data_dir / 'kradfile.jsonl'
    convert_kradfile(input_paths, output_path)


def convert_kradfile(input_paths, output_path):
    logger.info('Converting KRADFILE ...')
    stream = input_streams(input_paths)
    stream = record_adapter(stream)
    stream = stream_writer(stream, output_path)
    read_stream(stream)
    logger.info('Converted KRADFILE')


def input_streams(paths):
    for path in paths:
        for raw in input_stream(path):
            yield raw


def input_stream(path):
    with open(path) as file:
        for line in file:
            line = line.strip()
            if line.startswith('#'):
                continue
            yield line


def record_adapter(stream):
    for raw in stream:
        yield build_record(raw)


def build_record(raw):
    return [raw[0], raw[4:].split(' ')]


def stream_writer(stream, path, write=None):
    write = write or write_json
    with open(path, 'w') as file:
        for record in stream:
            write(record, file)
            yield record


def write_json(obj, file):
    file.write(f'{json.dumps(obj, ensure_ascii=False)}\n')


def read_stream(stream):
    for record in stream:
        pass


if __name__ == '__main__':
    main()
